#include <iostream>
#include <fstream>
using namespace std;

// 연속된 자연수 합
int main()
{
	ios_base::sync_with_stdio(false);
	//ifstream cin;
	//cin.open("input.txt");

	int n; // N
	cin >> n;

	// 연속된 자연수 합
	// 15 == 7 + 8 -> (15 / 2) + (15 / 2) + 1) : 제수 2 항 2개 결과가 같으므로 표현하는방법 상수값 1
	// 15 == 4 + 5 + 6 -> ((15 / 3) - 1) + (15 / 3) + ((15 / 3) + 1) : 제수 3 항 3개 결과가 같으므로 표현하는방법 상수값 0
	// 15 != ((15 / 4) - 1) + (15 / 4) + ((15 / 4) + 1) + ((15 / 4) + 2) = 2 + 3 + 4 + 5 = 14 : 제수 4 항 4개 결과가 다르므로 표현방법아님 상수값 2
	// 15 == 1 + 2 + 3 + 4 + 5 -> ((15 / 5) - 2) + ((15 / 5) - 1) + (15 / 5) + ((15 / 5) + 1) + ((15 / 5) + 2) : 제수 5 항 5 개 결과가 같으므로 표현하는방법 1이 포함되므로 이후는 반복 X 상수값 0

	int cnt = 0;

	for (int i = 2; i < n; i++)
	{
		int sum = 0;
		int isEnd = false; // 식 구하기 끝났는지 체크

		for (int j = 0; j < i; j++) // 항 개만큼 더하고
		{
			sum += n / i;
		}

		// 짝수만 상수값 더해주면 총합
		if (i % 2 == 0)
		{
			sum += i / 2;
		}

		// 총합이 n과 같다면 표현방법이므로 식 출력 후 개수 카운팅
		if (n == sum)
		{
			// 가장 작은 항을 구해서 개수만큼 i개 항 출력
			// i가 2,3,4,5,6,7,8,9 .... -> 0 -1 -1 -2 -2 -3 -3 -4 ....
			// i-2 0 1 2 3 4 5 6 7
			// 짝수면 2로 나누고 홀수면 + 1 후 2로 나눠줌

			int lowNum = 0; // 가장 작은 항

			if (i % 2 == 0) // 짝수
			{
				lowNum = (n / i) - (i - 2) / 2;
			}
			else // 홀수
			{
				lowNum = (n / i) - (i - 2 + 1) / 2;
			}
			
			if (lowNum < 0) // 가장 작은 항이 음수면 종료
			{
				break;
			}

			if (lowNum == 1) // 가장 작은 항이 1이면 더이상 구할필요없음
			{
				isEnd = true;
			}

			cout << lowNum;

			for (int j = 1; j < i; j++)
			{
				cout << " + " << lowNum + j;
			}

			cout << " = " << n << '\n';

			// 식 개수 카운팅
			cnt++;
		}

		if (isEnd) // 더이상 구하필요없으면 종료
		{
			break;
		}
	}

	cout << cnt << '\n';

	return 0;
}